{
	"info": {
		"_postman_id": "6b49dcb6-0b9e-40b9-b261-e01b5b9d5972",
		"name": "bookstore_backend",
		"description": "This API provides CRUD (Create, Read, Update, Delete) operations for managing books in a bookstore. Users must authenticate using JWT (JSON Web Token) to access certain endpoints.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "32317791"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "auth",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"test-user3\",\n  \"password\": \"test123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8000/auth",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"auth"
							]
						},
						"description": "This endpoint is used to authenticate users via HTTP POST request to localhost:8000/auth. The request should include a payload in raw JSON format with \"username\" and \"password\" fields. Upon successful execution, the endpoint returns a status code of 201 and a JSON response with a \"message\" field indicating the outcome of the authentication process.\n\n### Request Body\n\n- `username` (string): The username of the user.\n- `password` (string): The password of the user.\n    \n\n### Response\n\n- Status: 201\n- Content-Type: application/json\n- `message` (string): A message indicating the outcome of the authentication process, such as \"User test-user3 created!\"."
					},
					"response": [
						{
							"name": "create user test",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"test-user3\",\n  \"password\": \"test123\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8000/auth",
									"host": [
										"localhost"
									],
									"port": "8000",
									"path": [
										"auth"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "date",
									"value": "Fri, 26 Jan 2024 05:32:27 GMT"
								},
								{
									"key": "server",
									"value": "uvicorn"
								},
								{
									"key": "content-length",
									"value": "38"
								},
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"User test-user3 created!\"\n}"
						}
					]
				},
				{
					"name": "auth/token",
					"request": {
						"method": "GET",
						"header": [],
						"description": "## Auth Token\n\nThis endpoint is used to authenticate and obtain a token for accessing protected resources.\n\n### Request Body\n\n- `username` (text): The username of the user.\n- `password` (text): The password of the user.\n    \n\n### Response\n\n- Status: 200\n- Content-Type: application/json\n    \n\n#### Response Body\n\n- `access_token`: The access token for accessing protected resources.\n- `token_type`: The type of token (e.g., bearer).\n    \n\n#### Example Response\n\n``` json\n{\n    \"access_token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ0ZXN0LXVzZXIzIiwiaWQiOjQsImV4cCI6MTcwNjI0ODUwOX0.c3yHTXGrNeCJhVtuO-9ZUNNr63LRgOyUOI2GrtR0o5k\",\n    \"token_type\": \"bearer\"\n}\n\n ```"
					},
					"response": [
						{
							"name": "access token response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "username",
											"value": "test-user3",
											"type": "text"
										},
										{
											"key": "password",
											"value": "test123",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "localhost:8000/auth/token",
									"host": [
										"localhost"
									],
									"port": "8000",
									"path": [
										"auth",
										"token"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "date",
									"value": "Fri, 26 Jan 2024 05:35:08 GMT"
								},
								{
									"key": "server",
									"value": "uvicorn"
								},
								{
									"key": "content-length",
									"value": "181"
								},
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"access_token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ0ZXN0LXVzZXIzIiwiaWQiOjQsImV4cCI6MTcwNjI0ODUwOX0.c3yHTXGrNeCJhVtuO-9ZUNNr63LRgOyUOI2GrtR0o5k\",\n    \"token_type\": \"bearer\"\n}"
						}
					]
				}
			],
			"description": "This folder contains JWT authentication related API endpoints."
		},
		{
			"name": "CRUD",
			"item": [
				{
					"name": "get all books",
					"request": {
						"method": "GET",
						"header": [],
						"description": "# Get Books\n\nThis endpoint retrieves a list of books.\n\n### Response\n\n- Status: 200\n- Content-Type: application/json\n    \n\nExample response body:\n\n``` json\n[\n    {\n        \"title\": \"Sample Book\",\n        \"isbn\": 5678,\n        \"author\": \"string\",\n        \"quantity\": 0,\n        \"price\": 0\n    },\n    {\n        \"title\": \"Sample Book\",\n        \"isbn\": 1234567890,\n        \"author\": \"Sample Author\",\n        \"quantity\": 10,\n        \"price\": 19.99\n    },\n    ...\n]\n\n ```"
					},
					"response": [
						{
							"name": "sample GET",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:8000/books",
									"host": [
										"localhost"
									],
									"port": "8000",
									"path": [
										"books"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "date",
									"value": "Fri, 26 Jan 2024 05:36:56 GMT"
								},
								{
									"key": "server",
									"value": "uvicorn"
								},
								{
									"key": "content-length",
									"value": "1110"
								},
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"title\": \"Sample Book\",\n        \"isbn\": 5678,\n        \"author\": \"string\",\n        \"quantity\": 0,\n        \"price\": 0\n    },\n    {\n        \"title\": \"Sample Book\",\n        \"isbn\": 1234567890,\n        \"author\": \"Sample Author\",\n        \"quantity\": 10,\n        \"price\": 19.99\n    },\n    {\n        \"title\": \"Sample Book\",\n        \"isbn\": 1234567891,\n        \"author\": \"string\",\n        \"quantity\": 0,\n        \"price\": 0\n    },\n    {\n        \"title\": \"Sample Book\",\n        \"isbn\": 1234567892,\n        \"author\": \"string\",\n        \"quantity\": 0,\n        \"price\": 0\n    },\n    {\n        \"title\": \"Sample Book\",\n        \"isbn\": 1234567893,\n        \"author\": \"string\",\n        \"quantity\": 0,\n        \"price\": 0\n    },\n    {\n        \"title\": \"Sample Book\",\n        \"isbn\": 1234567894,\n        \"author\": \"string\",\n        \"quantity\": 0,\n        \"price\": 0\n    },\n    {\n        \"title\": \"Sample Book\",\n        \"isbn\": 1234567895,\n        \"author\": \"string\",\n        \"quantity\": 0,\n        \"price\": 0\n    },\n    {\n        \"title\": \"Sample Book\",\n        \"isbn\": 1234567896,\n        \"author\": \"string\",\n        \"quantity\": 0,\n        \"price\": 0\n    },\n    {\n        \"title\": \"Sample Book\",\n        \"isbn\": 1234567897,\n        \"author\": \"string\",\n        \"quantity\": 0,\n        \"price\": 0\n    },\n    {\n        \"title\": \"Sample Book\",\n        \"isbn\": 1234567898,\n        \"author\": \"string\",\n        \"quantity\": 0,\n        \"price\": 0\n    },\n    {\n        \"title\": \"Sample Book\",\n        \"isbn\": 1234567899,\n        \"author\": \"string\",\n        \"quantity\": 0,\n        \"price\": 0\n    },\n    {\n        \"title\": \"Sample Book\",\n        \"isbn\": 1234567900,\n        \"author\": \"string\",\n        \"quantity\": 0,\n        \"price\": 0\n    },\n    {\n        \"title\": \"Sample Book\",\n        \"isbn\": 1234567901,\n        \"author\": \"string\",\n        \"quantity\": 0,\n        \"price\": 0\n    }\n]"
						}
					]
				},
				{
					"name": "get individual book",
					"request": {
						"method": "GET",
						"header": [],
						"description": "This endpoint makes an HTTP GET request to localhost:8000/book/5678 to retrieve information about a specific book with the given ISBN. The response will be in JSON format and will include the title, ISBN, author, quantity, and price of the book.\n\n### Response\n\n- `title` (string): The title of the book.\n- `isbn` (number): The ISBN of the book.\n- `author` (string): The author of the book.\n- `quantity` (number): The quantity of the book available.\n- `price` (number): The price of the book.\n    \n\nExample response:\n\n``` json\n{\n    \"title\": \"Sample Book\",\n    \"isbn\": 5678,\n    \"author\": \"string\",\n    \"quantity\": 0,\n    \"price\": 0\n}\n\n ```"
					},
					"response": [
						{
							"name": "sample GET",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:8000/book/5678",
									"host": [
										"localhost"
									],
									"port": "8000",
									"path": [
										"book",
										"5678"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "date",
									"value": "Fri, 26 Jan 2024 05:37:40 GMT"
								},
								{
									"key": "server",
									"value": "uvicorn"
								},
								{
									"key": "content-length",
									"value": "78"
								},
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"title\": \"Sample Book\",\n    \"isbn\": 5678,\n    \"author\": \"string\",\n    \"quantity\": 0,\n    \"price\": 0\n}"
						}
					]
				},
				{
					"name": "post book",
					"request": {
						"method": "GET",
						"header": [],
						"description": "### Add a New Book\n\nThis endpoint allows you to add a new book to the collection.\n\n**HTTP Request**\n\n``` http\nPOST localhost:8000/books/\n\n ```\n\n**Request Body**\n\n- `isbn` (number): The ISBN of the book.\n- `title` (string): The title of the book.\n- `author` (string): The author of the book.\n- `price` (number): The price of the book.\n- `quantity` (number): The quantity of the book available.\n    \n\n**Response**\n\n- Status: 201 Created\n- Content-Type: application/json\n- `message` (string): A message indicating the status of the book creation.\n    \n\n**Example Response**\n\n``` json\n{\n    \"message\": \"Book has been created!\"\n}\n\n ```"
					},
					"response": [
						{
							"name": "Sample POST",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"isbn\": 1278,\n  \"title\": \"Harry Potter\",\n  \"author\": \"JK Rowling\",\n  \"price\": 500,\n  \"quantity\": 6\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8000/books/",
									"host": [
										"localhost"
									],
									"port": "8000",
									"path": [
										"books",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "date",
									"value": "Fri, 26 Jan 2024 05:45:45 GMT"
								},
								{
									"key": "server",
									"value": "uvicorn"
								},
								{
									"key": "content-length",
									"value": "36"
								},
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Book has been created!\"\n}"
						}
					]
				},
				{
					"name": "update book",
					"request": {
						"method": "GET",
						"header": [],
						"description": "This endpoint allows you to update a book with the specified ID.\n\n### Request Body\n\n- `isbn` (number): The ISBN of the book.\n- `title` (string): The title of the book.\n- `author` (string): The author of the book.\n- `price` (number): The price of the book.\n- `quantity` (number): The quantity of the book.\n    \n\n#### Example Request Body\n\n``` json\n{\n    \"isbn\": 1234567890,\n    \"title\": \"Sample Title\",\n    \"author\": \"Sample Author\",\n    \"price\": 25.00,\n    \"quantity\": 100\n}\n\n ```\n\n### Response\n\n- `message` (string): A message indicating the status of the update operation.\n    \n\n#### Example Response\n\n``` json\n{\n    \"message\": \"Book has been updated!\"\n}\n\n ```"
					},
					"response": [
						{
							"name": "sample update",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"isbn\": 5678,\n  \"title\": \"Power of Habit\",\n  \"author\": \"Charled Duhigg\",\n  \"price\": 250,\n  \"quantity\": 10\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8000/book/5678",
									"host": [
										"localhost"
									],
									"port": "8000",
									"path": [
										"book",
										"5678"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "date",
									"value": "Fri, 26 Jan 2024 05:48:34 GMT"
								},
								{
									"key": "server",
									"value": "uvicorn"
								},
								{
									"key": "content-length",
									"value": "36"
								},
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Book has been updated!\"\n}"
						}
					]
				},
				{
					"name": "delete book",
					"request": {
						"method": "GET",
						"header": [],
						"description": "This endpoint sends an HTTP DELETE request to localhost:8000/book/1234567901 to delete a specific book. Upon successful deletion, it returns a JSON response with a status code of 200 and a message indicating the success of the operation.\n\n### Response\n\n- Status: 200\n- Content-Type: application/json\n    \n\nExample response body:\n\n``` json\n{\n    \"message\": \"Book Deleted!\"\n}\n\n ```"
					},
					"response": [
						{
							"name": "sample delete",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "localhost:8000/book/1234567901",
									"host": [
										"localhost"
									],
									"port": "8000",
									"path": [
										"book",
										"1234567901"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "date",
									"value": "Fri, 26 Jan 2024 05:50:23 GMT"
								},
								{
									"key": "server",
									"value": "uvicorn"
								},
								{
									"key": "content-length",
									"value": "27"
								},
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Book Deleted!\"\n}"
						}
					]
				}
			],
			"description": "This folder contains the primary CRUD APIs that define the application."
		}
	]
}